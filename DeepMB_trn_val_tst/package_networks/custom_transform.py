import torch


def custom_transform(data, TRANSFORM_TRN_VAL_TARGETS, DIVISOR_FOR_TARGET_IMAGE_NORMALIZATION):

  if TRANSFORM_TRN_VAL_TARGETS == 'NONE':
    return data

  elif TRANSFORM_TRN_VAL_TARGETS == 'SQUARE':
    return torch.square(data)

  elif TRANSFORM_TRN_VAL_TARGETS == 'SQRT':
    return torch.sqrt(data)

  elif TRANSFORM_TRN_VAL_TARGETS == 'NORMALIZED_SQUARE':
    return torch.square(DIVISOR_FOR_TARGET_IMAGE_NORMALIZATION * data) / DIVISOR_FOR_TARGET_IMAGE_NORMALIZATION

  elif TRANSFORM_TRN_VAL_TARGETS == 'NORMALIZED_SQRT':
    return torch.sqrt(DIVISOR_FOR_TARGET_IMAGE_NORMALIZATION * data) / DIVISOR_FOR_TARGET_IMAGE_NORMALIZATION

  else:
    raise
